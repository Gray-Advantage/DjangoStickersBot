# Generated by Django 4.2.16 on 2024-11-04 22:22

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="TelegramUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telegram_id",
                    models.PositiveBigIntegerField(verbose_name="ИД в телеграмме"),
                ),
                (
                    "is_admin",
                    models.BooleanField(
                        default=False, verbose_name="Администратор ли это"
                    ),
                ),
                (
                    "state",
                    models.IntegerField(
                        choices=[(0, "Idle"), (1, "Edit Sticker Text")],
                        default=0,
                        verbose_name="Состояние пользователя",
                    ),
                ),
                (
                    "context_data",
                    models.CharField(
                        default="",
                        max_length=100,
                        verbose_name="Контекстная дата, в зависимости от состояния пользователя",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StickerSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=1024, verbose_name="Имя стикер пака"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sticker_sets",
                        to="bot.telegramuser",
                        verbose_name="Пользователь, добавивший этот стикер пак",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sticker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_id",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="ИД файла для скачивания",
                    ),
                ),
                (
                    "file_unique_id",
                    models.CharField(
                        max_length=64,
                        unique=True,
                        verbose_name="ИД стикера для редактирования",
                    ),
                ),
                ("text", models.TextField(verbose_name="Текстовое содержимое стикера")),
                (
                    "text_search_vector",
                    django.contrib.postgres.search.SearchVectorField(null=True),
                ),
                (
                    "sticker_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stickers",
                        to="bot.stickerset",
                        verbose_name="Стикер пак, которому принадлежит этот стикер",
                    ),
                ),
            ],
            options={
                "indexes": [
                    django.contrib.postgres.indexes.GinIndex(
                        fields=["text_search_vector"],
                        name="bot_sticker_text_se_2c8bcc_gin",
                    )
                ],
            },
        ),
    ]
